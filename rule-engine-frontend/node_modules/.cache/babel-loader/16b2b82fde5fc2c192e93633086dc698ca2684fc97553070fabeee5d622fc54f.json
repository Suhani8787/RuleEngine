{"ast":null,"code":"var _jsxFileName = \"F:\\\\Suhani\\\\RuleEngine\\\\rule-engine-frontend\\\\src\\\\components\\\\RuleForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuleForm = () => {\n  _s();\n  const [ruleExpression, setRuleExpression] = useState('');\n  const [astStructure, setAstStructure] = useState('{}'); // Default empty object for AST\n\n  const handleCreateRule = async () => {\n    const rule = {\n      ruleExpression,\n      astStructure: JSON.parse(astStructure) // Convert string to JSON\n    };\n    try {\n      const response = await axios.post('http://localhost:5000/api/rules/create', rule);\n      alert('Rule Created Successfully!');\n    } catch (error) {\n      console.error('Error creating rule:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter Rule Expression\",\n      value: ruleExpression,\n      onChange: e => setRuleExpression(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter AST Structure (JSON format)\",\n      value: astStructure,\n      onChange: e => setAstStructure(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateRule,\n      children: \"Create Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(RuleForm, \"XrzHbxe4RR+U+hfzwgO3YHdUoTQ=\");\n_c = RuleForm;\nexport default RuleForm;\nvar _c;\n$RefreshReg$(_c, \"RuleForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RuleForm","_s","ruleExpression","setRuleExpression","astStructure","setAstStructure","handleCreateRule","rule","JSON","parse","response","post","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["F:/Suhani/RuleEngine/rule-engine-frontend/src/components/RuleForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RuleForm = () => {\r\n    const [ruleExpression, setRuleExpression] = useState('');\r\n    const [astStructure, setAstStructure] = useState('{}'); // Default empty object for AST\r\n\r\n    const handleCreateRule = async () => {\r\n        const rule = {\r\n            ruleExpression,\r\n            astStructure: JSON.parse(astStructure)  // Convert string to JSON\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/rules/create', rule);\r\n            alert('Rule Created Successfully!');\r\n        } catch (error) {\r\n            console.error('Error creating rule:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Rule</h2>\r\n            <textarea\r\n                placeholder=\"Enter Rule Expression\"\r\n                value={ruleExpression}\r\n                onChange={(e) => setRuleExpression(e.target.value)}\r\n            />\r\n            <textarea\r\n                placeholder=\"Enter AST Structure (JSON format)\"\r\n                value={astStructure}\r\n                onChange={(e) => setAstStructure(e.target.value)}\r\n            />\r\n            <button onClick={handleCreateRule}>Create Rule</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RuleForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,IAAI,GAAG;MACTL,cAAc;MACdE,YAAY,EAAEI,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,CAAE;IAC5C,CAAC;IAED,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,wCAAwC,EAAEJ,IAAI,CAAC;MACjFK,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACId,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpB,OAAA;MACIqB,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAEnB,cAAe;MACtBoB,QAAQ,EAAGC,CAAC,IAAKpB,iBAAiB,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACFpB,OAAA;MACIqB,WAAW,EAAC,mCAAmC;MAC/CC,KAAK,EAAEjB,YAAa;MACpBkB,QAAQ,EAAGC,CAAC,IAAKlB,eAAe,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACFpB,OAAA;MAAQ0B,OAAO,EAAEnB,gBAAiB;MAAAS,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAClB,EAAA,CAlCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}