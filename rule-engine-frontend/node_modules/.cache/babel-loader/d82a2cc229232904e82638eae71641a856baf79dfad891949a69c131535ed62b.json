{"ast":null,"code":"var _jsxFileName = \"F:\\\\Suhani\\\\RuleEngine\\\\rule-engine-frontend\\\\src\\\\components\\\\RuleList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuleList = () => {\n  _s();\n  const [rules, setRules] = useState([]);\n  useEffect(() => {\n    const fetchRules = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/rules');\n        setRules(response.data);\n      } catch (error) {\n        console.error('Error fetching rules:', error);\n      }\n    };\n    fetchRules();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Rules List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rules.map(rule => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: rule.ruleExpression\n      }, rule._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(RuleList, \"sTtk373PZ75lT1TKxmJpkKbdr00=\");\n_c = RuleList;\nexport default RuleList;\nvar _c;\n$RefreshReg$(_c, \"RuleList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","RuleList","_s","rules","setRules","fetchRules","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rule","ruleExpression","_id","_c","$RefreshReg$"],"sources":["F:/Suhani/RuleEngine/rule-engine-frontend/src/components/RuleList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RuleList = () => {\r\n    const [rules, setRules] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchRules = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/rules');\r\n                setRules(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching rules:', error);\r\n            }\r\n        };\r\n\r\n        fetchRules();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Rules List</h2>\r\n            <ul>\r\n                {rules.map((rule) => (\r\n                    <li key={rule._id}>\r\n                        {rule.ruleExpression}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RuleList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBf,OAAA;MAAAW,QAAA,EACKR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACZjB,OAAA;QAAAW,QAAA,EACKM,IAAI,CAACC;MAAc,GADfD,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CA5BID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}